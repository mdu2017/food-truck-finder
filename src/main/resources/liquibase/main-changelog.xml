<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd">

    <changeSet author="etdickey" id="create initial tables">
        <sql>
            CREATE TABLE `USER` (
            `USER_ID` int(11) NOT NULL AUTO_INCREMENT,
            `USERNAME` varchar(20) NOT NULL,
            `PRINCIPAL` varchar(255) NOT NULL,
            `PASSWORD` varchar(255) NOT NULL,
            `IS_OWNER` tinyint(4) NOT NULL,
            `PREF_DISTANCE` double NOT NULL DEFAULT 0.5,
            `PREF_HIGH` double NOT NULL DEFAULT 1000,
            `PREF_LOW` double NOT NULL DEFAULT 0,
            PRIMARY KEY (`USER_ID`),
            UNIQUE KEY `PRINCIPAL_UNIQUE` (`PRINCIPAL`),
            UNIQUE KEY `USER_ID_UNIQUE` (`USER_ID`),
            UNIQUE KEY `Username_UNIQUE` (`USERNAME`)
            );

            CREATE TABLE `FOOD_TRUCK` (
            `FOOD_TRUCK_ID` int(11) NOT NULL AUTO_INCREMENT,
            `OWNER_ID` int(11) NOT NULL,
            `NAME` varchar(45) NOT NULL,
            `TYPE` int(11) NOT NULL,
            `TRUCK_IMAGE` blob,
            `PRICE_LOW` double NOT NULL,
            `PRICE_HIGH` double NOT NULL,
            `STATUS` varchar(12) NOT NULL,
            `DESCRIPTION` varchar(255) DEFAULT NULL,
            PRIMARY KEY (`FOOD_TRUCK_ID`),
            UNIQUE KEY `FOOD_TRUCK_ID_UNIQUE` (`FOOD_TRUCK_ID`),
            KEY `owned_by_idx` (`OWNER_ID`),
            CONSTRAINT `OWNED_BY` FOREIGN KEY (`OWNER_ID`) REFERENCES `USER` (`USER_ID`) ON DELETE CASCADE ON UPDATE RESTRICT
            );

            CREATE TABLE `DEAL` (
            `DEAL_ID` int(11) NOT NULL AUTO_INCREMENT,
            `TRUCK_ID` int(11) NOT NULL,
            `MESSAGE` varchar(500) DEFAULT NULL,
            `START` datetime NOT NULL,
            `END` datetime NOT NULL,
            PRIMARY KEY (`DEAL_ID`),
            KEY `truck_id_idx` (`TRUCK_ID`),
            CONSTRAINT `truck_id` FOREIGN KEY (`TRUCK_ID`) REFERENCES `FOOD_TRUCK` (`FOOD_TRUCK_ID`) ON DELETE CASCADE ON UPDATE RESTRICT
            );

            CREATE TABLE `FOOD_TYPE` (
            `TYPE_ID` int(11) NOT NULL,
            `TYPE` varchar(30) NOT NULL,
            PRIMARY KEY (`TYPE_ID`),
            UNIQUE KEY `TYPE_UNIQUE` (`TYPE`)
            );

            CREATE TABLE `MENU` (
            `ITEM_ID` int(11) NOT NULL AUTO_INCREMENT,
            `TRUCK_ID` int(11) NOT NULL,
            `NAME` varchar(45) NOT NULL,
            `DESCRIPTION` varchar(300) DEFAULT NULL,
            `PRICE` double NOT NULL,
            PRIMARY KEY (`ITEM_ID`),
            KEY `truckid_idx` (`TRUCK_ID`),
            CONSTRAINT `truckid` FOREIGN KEY (`TRUCK_ID`) REFERENCES `FOOD_TRUCK` (`FOOD_TRUCK_ID`) ON DELETE CASCADE ON UPDATE RESTRICT
            );

            CREATE TABLE `NOTIFICATION` (
            `TRUCK_ID` int(11) NOT NULL,
            `USER_ID` int(11) NOT NULL,
            `SENT` datetime NOT NULL,
            `MESSAGE` varchar(300) NOT NULL,
            `VIEWED` tinyint(4) NOT NULL DEFAULT '0',
            PRIMARY KEY (`TRUCK_ID`,`USER_ID`,`SENT`),
            KEY `userid_idx` (`USER_ID`),
            KEY `useridnot_idx` (`USER_ID`),
            CONSTRAINT `truckidnot` FOREIGN KEY (`TRUCK_ID`) REFERENCES `FOOD_TRUCK` (`FOOD_TRUCK_ID`) ON DELETE CASCADE ON UPDATE RESTRICT,
            CONSTRAINT `useridnot` FOREIGN KEY (`USER_ID`) REFERENCES `USER` (`USER_ID`) ON DELETE CASCADE ON UPDATE RESTRICT
            );

            CREATE TABLE `REVIEW` (
            `TRUCK_ID` int(11) NOT NULL,
            `USER_ID` int(11) NOT NULL,
            `MESSAGE` varchar(500) NOT NULL,
            `RATING` float NOT NULL,
            `DATE` datetime NOT NULL,
            PRIMARY KEY (`USER_ID`,`TRUCK_ID`),
            KEY `truckidrev_idx` (`TRUCK_ID`),
            CONSTRAINT `truckidrev` FOREIGN KEY (`TRUCK_ID`) REFERENCES `FOOD_TRUCK` (`FOOD_TRUCK_ID`) ON DELETE CASCADE ON UPDATE RESTRICT,
            CONSTRAINT `useridrev` FOREIGN KEY (`USER_ID`) REFERENCES `USER` (`USER_ID`) ON DELETE CASCADE ON UPDATE RESTRICT
            );

            CREATE TABLE `TRUCK_STOP` (
            `STOP_ID` int(11) NOT NULL AUTO_INCREMENT,
            `START` datetime NOT NULL,
            `END` datetime NOT NULL,
            `LATITUDE` double NOT NULL,
            `LONGITUDE` double NOT NULL,
            PRIMARY KEY (`STOP_ID`)
            );

            CREATE TABLE `SCHEDULE` (
            `TRUCK_ID` int(11) NOT NULL,
            `DAY` varchar(45) NOT NULL,
            `STOP_ID` int(11) NOT NULL,
            PRIMARY KEY (`TRUCK_ID`,`DAY`,`STOP_ID`),
            KEY `stopidsched_idx` (`STOP_ID`),
            CONSTRAINT `stopidsched` FOREIGN KEY (`STOP_ID`) REFERENCES `TRUCK_STOP` (`STOP_ID`) ON DELETE CASCADE ON UPDATE RESTRICT,
            CONSTRAINT `truckidsched` FOREIGN KEY (`TRUCK_ID`) REFERENCES `FOOD_TRUCK` (`FOOD_TRUCK_ID`) ON DELETE CASCADE ON UPDATE RESTRICT
            );

            CREATE TABLE `SUBSCRIPTIONS` (
            `TRUCK_ID` int(11) NOT NULL,
            `USER_ID` int(11) NOT NULL,
            PRIMARY KEY (`TRUCK_ID`,`USER_ID`),
            KEY `user_id_sub_idx` (`USER_ID`),
            CONSTRAINT `truck_id_sub` FOREIGN KEY (`TRUCK_ID`) REFERENCES `FOOD_TRUCK` (`FOOD_TRUCK_ID`) ON DELETE CASCADE ON UPDATE RESTRICT,
            CONSTRAINT `user_id_sub` FOREIGN KEY (`USER_ID`) REFERENCES `USER` (`USER_ID`) ON DELETE CASCADE ON UPDATE RESTRICT
            );

            CREATE TABLE `EVENT` (
            `EVENT_ID` int(11) NOT NULL AUTO_INCREMENT,
            `NAME` varchar(45) NOT NULL,
            `DESCRIPTION` varchar(500) NOT NULL,
            `STOP_ID` int(11) NOT NULL,
            PRIMARY KEY (`EVENT_ID`),
            KEY `Stop_idx` (`STOP_ID`),
            CONSTRAINT `Stop` FOREIGN KEY (`STOP_ID`) REFERENCES `TRUCK_STOP` (`STOP_ID`) ON DELETE CASCADE ON UPDATE RESTRICT
            );

            CREATE TABLE `ATTENDING_EVENT` (
            `TRUCK_ID` int(11) NOT NULL,
            `EVENT_ID` int(11) NOT NULL,
            PRIMARY KEY (`TRUCK_ID`,`EVENT_ID`),
            KEY `HOSTED_BY_idx` (`EVENT_ID`),
            CONSTRAINT `ATTENDED_BY` FOREIGN KEY (`TRUCK_ID`) REFERENCES `FOOD_TRUCK` (`FOOD_TRUCK_ID`) ON DELETE CASCADE ON UPDATE RESTRICT,
            CONSTRAINT `HOSTED_BY` FOREIGN KEY (`EVENT_ID`) REFERENCES `EVENT` (`EVENT_ID`) ON DELETE CASCADE ON UPDATE RESTRICT
            );

            CREATE TABLE `PREFERENCES` (
            `USER_ID` INT(11) NOT NULL,
            `FOOD_TYPE_ID` INT NOT NULL,
            PRIMARY KEY (`USER_ID`, `FOOD_TYPE_ID`),
            KEY `FOOD_TYPE_ID_idx` (`FOOD_TYPE_ID`),
            CONSTRAINT `FOOD_TYPE_ID` FOREIGN KEY (`FOOD_TYPE_ID`) REFERENCES `FOOD_TYPE` (`TYPE_ID`) ON DELETE CASCADE ON UPDATE RESTRICT
            );

<!--            populate stuff -->
            INSERT INTO FOOD_TYPE (TYPE_ID, TYPE) VALUES
            (0, 'AMERICAN'),
            (1, 'BBQ'),
            (2, 'BREAKFAST'),
            (3, 'CHINESE'),
            (4, 'DESERT'),
            (5, 'HEALTHY'),
            (6, 'INDIAN'),
            (7, 'MEDITERRANEAN'),
            (8, 'MEXICAN'),
            (9, 'PIZZA'),
            (10, 'SEAFOOD'),
            (11, 'VEGITARIAN'),
            (12, 'VEGAN'),
            (13, 'VIETNAMESE');

            INSERT INTO USER (USER_ID, USERNAME, PRINCIPAL, PASSWORD, IS_OWNER)
            VALUES
            (7, "adminasdfghjkl", "admin@asdfhash.com", "$2a$10$DNzQLTTd9lA6LFRhFSD.pu3aYdWTpMwZqy40pjgwKk/7lSC6visy2", 1),
            (1, "owner", "owner@owner.com", "$2a$10$9M4Z1uLzU4wM447xl4Hyzuepi4IrqsZxYi0LpJkS715nvIRGwhZhK", 1),
            (2, "user", "user@user.com", "$2a$10$/lzde7rRkfPNk6j.059cLO5NgLqph/shj5H/qDbpDMbNDaCvh8B5y", 0),
            (3, "cust", "customer@customer.com", "$2a$10$SYcSvNwqR2LKPS7eLodv0uciWospRzZiSWLtqoSzYHnX6E2uXiLUi", 0),
            (4, "goat", "goat@munchies.com", "$2a$10$.7tm.kZmN8vei94g68IMgOIYhUlPQF7FqT4RW9EXDfWspsMsQ/Umy", 0),
            (5, "bee", "bzz@bzzz.com", "$2a$10$.GeunneQDE83aNak0Pa.T.Bd6FPLX46i3c64cG0.8ikEZ8qHpE2By", 0),
            (6, "nomnom", "nom@noms.com", "$2a$10$fEiBGhlMvqWMpV5eSRmYk.jPRty/h7Rm/i0.TXUuP37q8By.1AXlC", 0);

            INSERT INTO FOOD_TRUCK (FOOD_TRUCK_ID, OWNER_ID, NAME, TYPE, TRUCK_IMAGE, PRICE_LOW, PRICE_HIGH, STATUS, DESCRIPTION)
            VALUES
            (1, 1, "Baylor honey", 5, NULL, 2, 10, "OPEN", "honey here"),
            (2, 1, "Torchies", 8, NULL, 1, 5, "OPEN", "Your favorite taco food truck"),
            (3, 1, "Free tank tops!", 12, NULL, 0.99, 3, "OPEN", "Free tank tops for first 100 visitors"),
            (4, 1, "Far away truck", 13, NULL, 100, 300, "OPEN", "Really far away, don't come"),
            (5, 1, "Closed truck", 0, NULL, 10000, 30000, "CLOSED", "good luck getting here"),
            (6, 7, "{All Users}", 0, NULL, 0, 0, "OPEN", "This is the system food truck!  All users get notifications through this truck!"),
            (7, 7, "{All Customers}", 0, NULL, 0, 0, "OPEN", "This is the food truck to deliver notifications to all customers!"),
            (8, 7, "{All Owners}", 0, NULL, 0, 0, "OPEN", "This is the food truck to deliver notifications to all owners!");

            <!--If there's an error, it may be associated with the fact that there's special characters in here-->
            INSERT INTO MENU
            (`ITEM_ID`, `TRUCK_ID`, `NAME`, `DESCRIPTION`, `PRICE`) VALUES
            <!--honeyyy-->
            (1, 1, "Honey", "The best honey you've ever had.  Sold by the spoonfull", 1.00),
            (2, 1, "Honey By the Gallon", "The best honey you've ever had.  Sold by the GALLON!", 20.00),
            (3, 1, "Honey ;)", "Come get your honey!", 10000000.00),
            (4, 1, "Honey and Nutella Crepe", "Nutella crepe with a dazzle of honey and topped by strawberries", 12.00),
            (5, 1, "Honey on bread, your style", "You tell us the kind of bread and how to cook it and we'll put some of our specialty honey on it!", 7.00),
            <!--torchies-->
            (6, 2, "Naughty Santa", "TACO OF THE MONTH: GRILLED SHRIMP, CHORIZO, PICKLED ONIONS, JACK CHEESE, AVOCADO, CILANTRO &amp; POBLANO SAUCE ON A FLOUR TORTILLA.", 3.00),
            (7, 2, "Monk Special", "\"Hold the potatoes.\" EGGS, BACON, GREEN CHILIES &amp; CHESSE. SERVED ON YOUR CHOICE OF TORTILLA", 2.50),
            (8, 2, "GREEN CHILE PORK", "PORK CARNITAS, GREEN CHILES, COTIJA CHEESE, CILANTRO, ONIONS &amp; A LIME WEDGE WITH TOMATILLO SAUCE ON A CORN TORTILLA.", 3.75),
            (9, 2, "FRIED AVOCADO", "FRIED AVOCADOS, REFRIED PINTO BEANS, PICO DE GALLO, LETTUCE &amp; CHEDDAR JACK CHEESE WITH POBLANO SAUCE ON A CORN TORTILLA.", 3.75),
            (10, 2, "CHICKEN FAJITA", "MARINATED &amp; GRILLED CHICKEN BREAST, GRILLED ONIONS &amp; PEPPERS, PICO DE GALLO &amp; CHEDDAR JACK CHEESE WITH TOMATILLO SAUCE ON YOUR CHOICE OF TORTILLA.", 3.50),
            (11, 2, "BEEF FAJITA", "MARINATED &amp; GRILLED BEEF, GRILLED ONIONS &amp; PEPPERS, PICO DE GALLO &amp; CHEDDAR JACK CHEESE WITH ROJA SAUCE ON YOUR CHOICE OF TORTILLA.", 3.75),
            (12, 2, "DEMOCRAT", "BARBACOA, AVOCADO, COTIJA CHEESE, CILANTRO, ONIONS &amp; A LIME WEDGE WITH TOMATILLO SAUCE ON A CORN TORTILLA.", 4.00),
            (13, 2, "REPUBLICAN", "GRILLED JALAPEÑO SAUSAGE, PICO DE GALLO &amp; CHEDDAR JACK CHEESE WITH POBLANO SAUCE ON A FLOUR TORTILLA.", 3.25),
            (14, 2, "INDEPENDENT", "FRIED PORTOBELLO MUSHROOMS, REFRIED BLACK BEANS, GRILLED CORN, ESCABECHE CARROTS, COTIJA CHEESE, CILANTRO &amp; AVOCADO WITH ANCHO AIOLI ON A FLOUR TORTILLA.", 3.50),
            (15, 2, "LOVE PUPPIES", "DARK CHOCOLATE BROWNIES MADE FROM SCRATCH! ASK FOR AVAILABLE FLAVORS", 2.50),
            (16, 2, "LIL NOOKIES", "FRIED CHOCOLATE CHIP COOKIE DOUGH DUSTED WITH POWDERED SUGAR &amp; TOPPED WITH CHERRIES. 3 for 2.95, 13 for 11.95!", 2.95),
            (17, 2, "SWEET CORN", "GRILLED CORN TOPPED WITH ANCHO AIOLI, COTIJA CHEESE, CILANTRO, DUSTED WITH RED CHILE POWDER AND SERVED WITH A LIME WEDGE.", 3.95),
            <!--misc-->
            (18, 3, "Tank top", "It's free!!", 0.00),
            (19, 3, "High class tank top", "Some really dope tank tops. Get 'em fast, they sell out quickly!", 20.00),
            (20, 4, "Something that sounds good", "But we're wayyyy to far away from you for you to care :)", 3.00),
            (21, 5, "Your favorite food", "But we're never open, sorry :/", 3.00);

            INSERT INTO TRUCK_STOP
            (STOP_ID, START, END, LATITUDE, LONGITUDE) VALUES
            (1, "2019-10-29 0:00:48", "2019-10-29 23:56:48", 31.549605, -97.114995),
            (2, "2019-10-29 0:00:12", "2019-10-29 23:58:12", 31.553196, -97.124797),
            (3, "2019-10-29 0:00:46", "2019-10-29 23:58:46", 31.264332, -95.880037),
            (4, "2019-10-29 0:00:42", "2019-10-29 23:03:42", 31.545743, -97.117805),
            (5, "2019-10-29 04:09:02", "2019-10-29 04:10:59", 31.54621, -97.109094),
            (6, "2019-10-29 0:00:48", "2019-10-29 23:56:48", 31.549605, -97.114995),
            (7, "2019-10-29 0:00:12", "2019-10-29 23:58:12", 31.553196, -97.124797),
            (8, "2019-10-29 0:00:46", "2019-10-29 23:58:46", 31.264332, -95.880037),
            (9, "2019-10-29 0:00:42", "2019-10-29 23:03:42", 31.545743, -97.117805),
            (10, "2019-10-29 0:00:48", "2019-10-29 23:56:48", 31.549605, -97.114995),
            (11, "2019-10-29 0:00:12", "2019-10-29 23:58:12", 31.553196, -97.124797),
            (12, "2019-10-29 0:00:46", "2019-10-29 23:58:46", 31.264332, -95.880037),
            (13, "2019-10-29 0:00:42", "2019-10-29 23:03:42", 31.545743, -97.117805);

            INSERT INTO SCHEDULE (TRUCK_ID, DAY, STOP_ID) VALUES
            (1, "T", 1), (2, "T", 2), (3, "T", 4), (4, "T", 3), (5, "T", 5),
            (1, "M", 6), (2, "M", 7), (3, "M", 9), (4, "M", 8),
            (1, "W", 10), (2, "W", 11), (3, "W", 13), (4, "W", 12),
            (1, "H", 10), (2, "H", 11), (3, "H", 13), (4, "H", 12),
            (1, "F", 10), (2, "F", 11), (3, "F", 13), (4, "F", 12),
            (1, "S", 10), (2, "S", 11), (3, "S", 13), (4, "S", 12),
            (1, "U", 10), (2, "U", 11), (3, "U", 13), (4, "U", 12);

            INSERT INTO SUBSCRIPTIONS (TRUCK_ID, USER_ID) VALUES
            (6, 7), (7, 7), (8, 7),
            (6, 1), (8, 1),
            (6, 2), (7, 2),
            (6, 3), (7, 3),
            (6, 4), (7, 4), (3, 4),
            (6, 5), (7, 5), (1, 5),
            (6, 6), (7, 6), (1, 6), (2, 6), (3, 6), (4, 6), (5, 6);

            INSERT INTO REVIEW (TRUCK_ID, USER_ID, MESSAGE, RATING, DATE) VALUES
            (1, 5, "bzzzzzz", 5, "2019-11-14 23:50:24"),
            (1, 6, "Some real good honey here.  Come and get some!", 5, "2019-11-14 23:50:24"),
            (2, 6, "Too hot to handle", 1.2, "2019-11-14 23:50:24"),
            (3, 4, "Shirt tastes real good this time of year!", 4.5, "2019-11-14 23:50:24"),
            (3, 6, "These are some lit tank tops!", 5, "2019-11-14 23:50:24"),
            (4, 6, "Man this place is so hard to find! Great food though", 3.5, "2019-11-14 23:50:24"),
            (5, 6, "Maaaan what tha!  This place is always closed except at like 4am! (Even then only for like a minute!)", 0.1, "2019-11-14 23:50:24"),
            (6, 3, "Lit place, great user interface!", 5, "2019-11-14 23:50:24"),
            (6, 2, "It's not the highest quality, but it's definitely better than the rest of the groups!", 4.5, "2019-11-14 23:50:24"),
            (6, 6, "Cool tank tops bro", 5, "2019-11-14 23:50:24"),
            (3, 3, "Cuz, you know, what good city doesn't have a food truck that sells tank tops?", 4, "2019-11-14 23:50:24"),
            (2, 2, "It's trucks like this that take away from local businesses!", 0, "2019-11-14 23:50:24");

        </sql>
    </changeSet>
</databaseChangeLog>
